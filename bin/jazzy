#!/usr/bin/env ruby
require 'jazzy'
require 'find'
require 'fileutils'
require 'optparse'

options = {
  input: File.expand_path('.'),
  output: File.expand_path('docs'),
  excludes: []
}

opt_parser = OptionParser.new do |opt|
  opt.banner = "Usage: jazzy [-i input] [-o output]"
  opt.separator  ""
  opt.separator  "Options"

  opt.on("-o", "--output FOLDER", "Folder to output the HTML docs to") do |output|
    options[:output] = File.expand_path(output)
  end

  opt.on("-e", "--exclude filepath1,filepath2,…filepathN", Array, "Exclude specific files") do |e|
    options[:excludes] = e
  end

  opt.on("-c", "--[no-]clean", "Delete contents of output directory before running") do |clean|
    options[:clean] = clean
  end

  opt.on("-x", "--xcodebuild-arguments arg1,arg2,…argN", Array, "Arguments to forward to xcodebuild") do |args|
    options[:xcodebuild_arguments] = args
  end

  opt.on("-h", "--help", "help") do
    puts opt_parser
  end
end

opt_parser.parse!

def prepare_output_dir(output_dir, clean)
  FileUtils.rm_r output_dir if (clean && File.directory?(output_dir))
  FileUtils.mkdir_p output_dir
end

sourcekitten_output = `sourcekitten #{options[:xcodebuild_arguments].join(" ")}`

# prepare_output_dir(options[:output], options[:clean])

# path = File.join(options[:output], "List.html")
# File.open(path, 'w') { |file| file.write(Jazzy::DocBuilder.document) }

# # Copy assets into output directory
# FileUtils.cp_r(File.expand_path(File.dirname(__FILE__) + '/../lib/jazzy/assets/') + '/.', options[:output])
